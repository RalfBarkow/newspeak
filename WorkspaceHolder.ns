Newspeak3
'Root'
class WorkspaceHolder usingPlatform: platform ide: i = (
  | private retainedPlatform = platform. private ide = i. |
) (
public class Workspace = (
(* The superclass of workspaces. For the time being, we do not dynamically create distinct classes per workspace. Instead,
we pass a name for each instance to the factory. *)
|
public workspaceText
|) (
public workspaceName ^ <String> = (
  ^class name
)
public actors = (^retainedPlatform actors)
public aliens = (^retainedPlatform aliens)
public class = (
	^super class
)
public collections = (^retainedPlatform collections)
protected doesNotUnderstand: message = (
	^Root
		at: message selector
		ifAbsent: [super doesNotUnderstand: message]
)
public files = (^retainedPlatform files)
public findInSource: stringOrRegex = (
	stringOrRegex isKindOfString ifFalse: [unimplemented].
	^methods select: [:method | method getSource includesSubString: stringOrRegex].
)
public graphics = (^retainedPlatform graphics)
public hopscotch = (^retainedPlatform hopscotch)
public ide ^ <HopscotchWebIDE> = (
	^outer WorkspaceHolder ide
)
public kernel = (^retainedPlatform kernel)
public mirrors = (^retainedPlatform mirrors)
platform ^ <Platform> = (
	^retainedPlatform
)
public printString ^ <String> = (
  ^workspaceName
)
public streams = (^retainedPlatform streams)
public text = (
	^retainedPlatform text
)
) : (
)
) : (
)
