Newspeak3
'Root'
class MetadataTesting usingPlatform: p <Platform>  metadata: mp <MetadataParsing> minitest: mt <Minitest> = (
	|
    private ClassMirror = p mirrors ClassMirror.
    private TestContext = mt TestContext.
    private MetadataParsing = mp.
	|
) (
public class FactoryTests = TestContext (
) (
class TestEmptyDefaultFactory = (
) (
) : (
)
class TestMetadataWithCommentDefaultFactory (*:factory-metadata: TestMetadataWithCommentDefaultFactory new *) (* Just a comment *) = (
) (
) : (
)
class TestMetadataWithCommentsDefaultFactory (* A regular comment *)  (* Another comment *) (*:factory-metadata: TestMetadataWithCommentsDefaultFactory new *) (* Just a comment *) (* yet another *) = (
) (
) : (
)
class TestMultipleMetadataNoCommentsDefaultFactory (* :a: A *) (* :b: B *) (*:factory-metadata: TestMetadataWithCommentsDefaultFactory new *) (* :testClass: TTY *) (* :c: C *)= (
) (
) : (
)
class TestMultipleMetadataWithCommentDefaultFactory (* :a: A *) (* :b: B *) (*:factory-metadata: TestMetadataWithCommentsDefaultFactory new *) (* :testClass: TTY *) (* :c: C *) (* A regular comment *)= (
) (
) : (
)
class TestMultipleMetadataWithCommentsDefaultFactory = (* A regular comment *)  (* Another comment *) (* :a: A *) (* :b: B *) (* intermediate comment *) (*:factory-metadata: TestMetadataWithCommentsDefaultFactory new *) (* :testClass: TTY *) (* :c: C *) (* A regular comment *) (* Just a comment *) (
) (
) : (
)
class TestNoMetadataWithCommentDefaultFactory (* A regular comment *)  = (
) (
) : (
)
class TestEmpty new = (
) (
) : (
)
class TestMetadataWithComment foo: x (*:factory-metadata: TestMetadataWithComment foo: 3 *) (* Just a comment *) = (
) (
) : (
)
class TestMetadataWithComments foo: x (* A regular comment *)  (* Another comment *) (*:factory-metadata: TestMetadataWithComments foo: 4 *) (* Just a comment *) (* yet another *) = (
) (
) : (
)
class TestMultipleMetadataNoComments foo: x (* :a: A *) (* :b: B *) (*:factory-metadata: TestMultipleMetadataNoComments foo: 'abc' *) (* :testClass: TTY *) (* :c: C *)= (
) (
) : (
)
class TestMultipleMetadataWithComment foo: x (* :a: A *) (* :b: B *) (*:factory-metadata: TestMultipleMetadataWithComment foo: 'xyz' *) (* :testClass: TTY *) (* :c: C *) (* A regular comment *)= (
) (
) : (
)
class TestMultipleMetadataWithComments foo: x bar: y (* A regular comment *)  (* Another comment *) (* :a: A *) (* :b: B *) (* intermediate comment *) (*:factory-metadata: TestMultipleMetadataWithComments foo: #bam bar: #baz *) (* :testClass: TTY *) (* :c: C *) (* A regular comment *) (* Just a comment *) = (
) (
) : (
)
class TestNoMetadataWithComment foo: x (* A regular comment *)  = (
) (
) : (
)
class TestNoMetadataWithComments foo: x (* A regular comment *)  (* Another comment *) = (
) (
) : (
)
metadataForClass: c <Class> ^ <Map[String, String]> = (
  ^ (ClassMirror reflecting: c) mixin declaration header metadata
)
public testEmpty = (* Test case where there is no metadata or comments *)(
  | metadata = metadataForClass: TestEmpty. |
  assert: metadata isKindOfMap.
  assert: metadata isEmpty.
)
public testNoMetadataWithComment = (* Test case where there is no metadata but there is a regular comment *)(
  | metadata = metadataForClass: TestNoMetadataWithComment. |
  assert: metadata isKindOfMap.
  assert: metadata isEmpty.  
)
public testNoMetadataWithComments = (* Test case where there is no metadata but there are several regular comments *)(
  | metadata = metadataForClass: TestNoMetadataWithComments. |
  assert: metadata isKindOfMap.
  assert: metadata isEmpty.
)
public testMetadataWithComment = (* Test case where there is a metadata comment and a regular comment *)(
  | metadata = metadataForClass: TestMetadataWithComment. |
  assert: metadata isKindOfMap.
  assert: metadata size equals: 1.
  assert: (metadata at: 'factory-metadata') equals: 'TestMetadataWithComment foo: 3'
)
public testMetadataWithComments = (* Test case where there is a metadata comment and several regular comments *)(
  | metadata = metadataForClass: TestMetadataWithComments. |
  assert: metadata isKindOfMap.
  assert: metadata size equals: 1.
  assert: (metadata at: 'factory-metadata') equals: 'TestMetadataWithComments foo: 4'  
)
public testMultipleMetadataNoComments = (* Test case where there are several metadata comments but no regular comments *)(
  | metadata = metadataForClass: TestMultipleMetadataNoComments. |
  assert: metadata isKindOfMap.
  assert: metadata size equals: 5.
  assert: (metadata at: #a) equals: 'A'.
  assert: (metadata at: #b) equals: 'B'.  
  assert: (metadata at: #c) equals: 'C'.
  assert: (metadata at: #testClass) equals: 'TTY'.
  assert: (metadata at: 'factory-metadata') equals: 'TestMultipleMetadataNoComments foo: ''abc'''
)
public testMultipleMetadataWithComment = (* Test case where there is are several metadata comments and a regular comment *)(
  | metadata = metadataForClass: TestMultipleMetadataWithComment. |
  assert: metadata isKindOfMap.
  assert: metadata size equals: 5.
  assert: (metadata at: #a) equals: 'A'.
  assert: (metadata at: #b) equals: 'B'.  
  assert: (metadata at: #c) equals: 'C'.
  assert: (metadata at: #testClass) equals: 'TTY'.  
  assert: (metadata at: 'factory-metadata') equals: 'TestMultipleMetadataWithComment foo: ''xyz'''
)
public testMultipleMetadataWithComments = (* Test case where there are several metadata comments and several regular comments *)(
  | metadata = metadataForClass: TestMultipleMetadataWithComments. |
  assert: metadata isKindOfMap.
  assert: metadata size equals: 5.
  assert: (metadata at: #a) equals: 'A'.
  assert: (metadata at: #b) equals: 'B'.  
  assert: (metadata at: #c) equals: 'C'.
  assert: (metadata at: #testClass) equals: 'TTY'.  
  assert: (metadata at: 'factory-metadata') equals: 'TestMultipleMetadataWithComments foo: #bam bar: #baz'
)
) : (
TEST_CONTEXT = ()
)
public class MethodTests = TestContext (
) (
public testEmpty = (* Test case where there is no metadata or comments *)(
)
public testNoMetadataWithComment = (* Test case where there is no metadata but there is a regular comment *)(
)
public testNoMetadataWithComments = (* Test case where there is no metadata but there are several regular comments *)(
)
public testMetadataWithComment = (* Test case where there is a metadata comment and a regular comment *)(
)
public testMetadataWithComments = (* Test case where there is a metadata comment and several regular comments *)(
)
public testMultipleMetadataWithComment = (* Test case where there is are several metadata comments and a regular comment *)(
)
public testMultipleMetadataNoComments = (* Test case where there are several metadata comments but no regular comments *)(
)
public testMultipleMetadataWithComments = (* Test case where there are several metadata comments and several regular comments *)(
)
) : (
TEST_CONTEXT = ()
)
public class ASTTests = TestContext (
) (
) : (
TEST_CONTEXT = ()
)
) : (
)
