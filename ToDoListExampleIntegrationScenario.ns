Newspeak3
'OrthogonalSynchronization'
public class ToDoListExampleIntegrationScenario manifest: m platform: p = (
|
	manifest = m.
	platform = p.
	List = p collections List.
	Map = p collections Map. 
	IdentityMap = p collections IdentityMap.
	clientServerSync= m ClientServerSynchronization usingPlatform: p. 
	clientSync = m ClientSynchronization usingPlatform: p clientServer: clientServerSync manifest: m. 
	versioning = m Versioning usingPlatform: p clientModule: clientSync clientServerModule: clientServerSync. 
	
	
	
	clients = List new.
	versionsServer 
	store
	
|
	
	

) (
createStoreBroker = (

	^  clientSync InMemoryStoreBroker store: store

)
installInitialAppDataOn: app = (
	| ex |
	app ToDoListExample: manifest ToDoListExample.
	app configureWithPlatform: platform.
	ex:: app toDoListExample.
	ex  addTaskWithDescription:  'Do laundry'.
	ex addTaskWithDescription: 'Buy groceries'.
	ex addTaskWithDescription: 'Clean house'.
	
)
registerClientApplication = (
	| newStoreClient |
	newStoreClient:: clientSync StoreClient server: createStoreBroker. 
	registerWellKnownObjectsOn: newStoreClient cto. 
	newStoreClient synchronize.
	clients add: newStoreClient.

	
)
registerClientApplications = (
	registerClientApplication.
	registerClientApplication. 
	registerClientApplication.  
)
registerServer = (
	| storeClient toDoListExampleApp storeConfiguration|
	
	toDoListExampleApp:: manifest ToDoListExampleApp packageUsing: manifest.
	versionsServer:: versioning VersionsServer new.
	
	storeConfiguration:: versioning StoreConfiguration resolvingConflictWith: [ :v1 :v2 | error  ].
	store:: versionsServer createStoreNamed: 'myStore' root: toDoListExampleApp  configuration: storeConfiguration. 
	
	storeClient:: clientSync StoreClient server: createStoreBroker. 
	
	storeClient synchronize.

	installInitialAppDataOn: storeClient root. 	
	registerWellKnownObjectsOn: storeClient cto. 

	storeClient synchronize.
	

)
registerWellKnownObjectsOn: cto = (
	| map idGenerator objects   | 
	idGenerator::  versioning IdGenerator seed: -1 nextIdBlock: [:x | x - 1].



	objects:: {
		platform kernel resolve .
		platform collections resolve .
		
		platform hopscotch   resolve core .
		platform hopscotch  resolve fragments .	
		
		manifest ToDoListExample.	
		manifest ToDoListExampleApp.	
		
		manifest ToDoListExample mixinSlot . 
		Object . 
		 Array . 
		
		(*
		platform hopscotch resolve .
		platform hopscotch resolve composers .
		platform hopscotch resolve canvas .
		platform hopscotch resolve outline .
		*)
	}, manifest ToDoListExample mixinSlot nestedMixins values
	,  (manifest ToDoListExample mixinSlot nestedMixins at: #ToDoListModel) nestedMixins values.

	map:: IdentityMap new.  
	objects do: [ :each | map at: each put: idGenerator newId].
	cto installImmutableObjectsFromIObjectToIdsMap: map.
	
)
public run = (

	registerServer.
	registerClientApplications. 
	runClientApplications.
)
runClientApplications = (

	clients do: [ :each | each root toDoListExample start: each ] .
)
public syncAndOpen = (
	clients do: [ :each | each synchronize].

	clients do: [ :each | each synchronize].
	runClientApplications.
)
) : (
)
